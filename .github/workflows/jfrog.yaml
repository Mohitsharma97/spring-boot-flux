name: JFrog Xray Security Scan

on:
  pull_request:
    paths:
      - '**/*.jar'
      - '**/*.pom'
      - '**/*.json'
      - '**/*.yml'

jobs:
  xray_scan:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up JFrog CLI
    - name: Set up JFrog CLI
      uses: jfrog/setup-jfrog-cli@v4
      with:
        version: '2.72.2'
        
    - name: Set up Java 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        java-package: jdk
        architecture: x64
        distribution: 'adoptopenjdk'

    # Step 3: Configure JFrog CLI (Authenticate with API key)
    - name: JFrog CLI Configuration
      run: |
        jf config add --url https://trial35x8wp.jfrog.io/artifactory --user ${{ secrets.JFROG_USER}} --access-token ${{ secrets.JFROG_API_KEY }}

    # # Step 4: Verify JFrog CLI configuration
    # - name: Verify JFrog CLI Configuration
    #   run: |
    #     jf config show
    #     jf rt ping

    - name: Build project with Maven
      run: |
        mvn clean install -DskipTests
        
    # Step 5: Run JFrog Xray Scan
    - name: Run JFrog Xray Scan
      id: xray_scan
      run: |
        jf xr scan --licenses --format=json --min-severity=critical **/*.jar **/*.pom **/*.json **/*.yml > xray_scan_results.json
      continue-on-error: false

    # Step 6: Upload scan results to PR as a comment
    - name: Upload Xray scan results to PR
      if: success() || failure()
      run: |
        # Get the PR number
        PR_NUMBER=$(jq --raw-output .pull_request.number $GITHUB_EVENT_PATH)
        
        # Get the scan results and format them
        SCAN_RESULTS=$(cat xray_scan_results.json)
        
        # Prepare the comment body with scan results
        COMMENT_BODY="### JFrog Xray Security Scan Results\n\n**Scan Results**:\n\`\`\`json\n$SCAN_RESULTS\n\`\`\`"
        
        # Create the comment on the PR using GitHub API
        curl -X POST \
          -H "Authorization: Bearer ${{ secrets.GITHUB1_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d "{\"body\": \"$COMMENT_BODY\"}" \
          "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments"
