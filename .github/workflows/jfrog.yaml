name: JFrog Deploy and Xray Security Scan

on:
  pull_request:
    paths:
      - '**/*.pom'
      - '**/*.jar'
      - '**/*.yml'
      - '**/*.json'

jobs:
  deploy-and-scan:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up JFrog CLI
      - name: Set up JFrog CLI
        run: |
          curl -fL https://getcli.jfrog.io | sh
          ./jfrog rt config --url https://trial35x8wp.jfrog.io/artifactory --user ${{ secrets.JFROG_USER }} --apikey ${{ secrets.JFROG_API_KEY }}

      # Step 3: Build and deploy artifacts to JFrog Artifactory
      - name: Build and Deploy to JFrog Artifactory
        run: |
          mvn clean install -DskipTests
          ./jfrog rt u "target/*.jar" libs-snapshot-local/ \
            --build-name=my-build \
            --build-number=${{ github.run_number }}

      # Step 4: Scan artifacts with JFrog Xray
      - name: Scan Artifacts with JFrog Xray
        run: |
          ./jfrog rt build-scan my-build ${{ github.run_number }}

      # Step 5: Post scan results as a PR comment
      - name: Create PR comment with security results
        run: |
          scan_results=$(./jfrog rt build-scan my-build ${{ github.run_number }} --output=json)
          pr_url="https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{\"body\": \"### JFrog Xray Security Scan Results\\n\\n**Summary:**\\n\\\`\\\`\\\`json\\n$scan_results\\n\\\`\\\`\\\`\\n\\n**Details:**\\nRefer to JFrog Xray for full report.\"}" \
            $pr_url
